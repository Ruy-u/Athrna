@model IEnumerable<Athrna.Models.Client>

@{
    ViewData["Title"] = "Manage Users";
    Layout = "_AdminLayout";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <div class="d-flex align-items-center">
                        <h6 class="mb-0">Manage Users</h6>
                    </div>
                </div>
                <div class="card-body px-0 pt-0 pb-2">
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">User</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Email</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Status</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Role</th>
                                    <th class="text-secondary opacity-7"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model.OrderBy(u => u.Username))
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex px-3 py-1">
                                                <div class="avatar-circle me-3" style="width: 40px; height: 40px; font-size: 1.2rem; background-color: #1a3b29; color: white; display: flex; align-items: center; justify-content: center; border-radius: 50%;">
                                                    @user.Username.Substring(0, 1).ToUpper()
                                                </div>
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@user.Username</h6>
                                                    <p class="text-xs text-secondary mb-0">ID: @user.Id</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <p class="text-sm text-secondary mb-0">@user.Email</p>
                                            @if (!user.IsEmailVerified)
                                            {
                                                <span class="badge bg-warning">Not Verified</span>
                                            }
                                        </td>
                                        <td>
                                            @if (user.IsBanned)
                                            {
                                                <span class="badge bg-danger">Banned</span>
                                                @if (!string.IsNullOrEmpty(user.BanReason))
                                                {
                                                    <div class="text-xs text-secondary mt-1">
                                                        <strong>Reason:</strong> @user.BanReason
                                                    </div>
                                                }
                                                @if (user.BannedAt.HasValue)
                                                {
                                                    <div class="text-xs text-secondary">
                                                        <strong>Since:</strong> @user.BannedAt.Value.ToString("yyyy-MM-dd")
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                        </td>
                                        <td>
                                            @if (user.Administrator != null)
                                            {
                                                string roleName = user.Administrator.RoleLevel switch
                                                {
                                                    1 => "Super Admin",
                                                    2 => "Senior Admin",
                                                    3 => "Content Manager",
                                                    4 => "User Manager",
                                                    5 => "Viewer",
                                                    _ => "Admin"
                                                };

                                                string badgeColor = user.Administrator.RoleLevel switch
                                                {
                                                    1 => "bg-danger",
                                                    2 => "bg-warning",
                                                    3 => "bg-success",
                                                    4 => "bg-info",
                                                    5 => "bg-secondary",
                                                    _ => "bg-primary"
                                                };

                                                <span class="badge @badgeColor">Level @user.Administrator.RoleLevel: @roleName</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-gradient-secondary">User</span>
                                            }
                                        </td>
                                        <td class="align-middle">
                                            <div class="d-flex gap-2">
                                                <!-- Toggle Admin Role -->
                                                @if (ViewBag.AdminRoleLevel == 1) // Only Super Admins can manage other admins
                                                {
                                                    @if (user.Administrator != null)
                                                    {
                                                        <a asp-action="ToggleAdmin" asp-route-id="@user.Id"
                                                           class="btn btn-sm btn-outline-danger"
                                                           onclick="return confirm('Are you sure you want to remove admin rights from this user?')">
                                                            <span><i class="bi bi-person"></i> Remove Admin</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-success"
                                                                data-bs-toggle="modal" data-bs-target="#makeAdminModal-@user.Id">
                                                            <span><i class="bi bi-person-check"></i> Make Admin</span>
                                                        </button>

                                                        <!-- Make Admin Modal -->
                                                        <div class="modal fade" id="makeAdminModal-@user.Id" tabindex="-1" aria-labelledby="makeAdminModalLabel-@user.Id" aria-hidden="true">
                                                            <div class="modal-dialog">
                                                                <div class="modal-content">
                                                                    <div class="modal-header">
                                                                        <h5 class="modal-title" id="makeAdminModalLabel-@user.Id">Assign Admin Role to @user.Username</h5>
                                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                    </div>
                                                                    <form asp-action="ToggleAdmin" method="get">
                                                                        <div class="modal-body">
                                                                            <input type="hidden" name="id" value="@user.Id" />

                                                                            <div class="form-group mb-3">
                                                                                <label for="roleLevel-@user.Id" class="form-label">Admin Role Level</label>
                                                                                <select id="roleLevel-@user.Id" name="roleLevel" class="form-select">
                                                                                    <option value="1">Level 1: Super Admin</option>
                                                                                    <option value="2">Level 2: Senior Admin</option>
                                                                                    <option value="3">Level 3: Content Manager</option>
                                                                                    <option value="4">Level 4: User Manager</option>
                                                                                    <option value="5" selected>Level 5: Viewer</option>
                                                                                </select>
                                                                            </div>

                                                                            <div class="role-descriptions mt-3">
                                                                                <h6>Role Permissions:</h6>
                                                                                <div class="role-description" id="role-desc-1-@user.Id">
                                                                                    <strong>Level 1: Super Admin</strong> - Full access to all admin functions, including managing other admins
                                                                                </div>
                                                                                <div class="role-description" id="role-desc-2-@user.Id">
                                                                                    <strong>Level 2: Senior Admin</strong> - Access to most functions except managing admins
                                                                                </div>
                                                                                <div class="role-description" id="role-desc-3-@user.Id">
                                                                                    <strong>Level 3: Content Manager</strong> - Can manage sites, cities, guides and content
                                                                                </div>
                                                                                <div class="role-description" id="role-desc-4-@user.Id">
                                                                                    <strong>Level 4: User Manager</strong> - Can manage users, bookmarks, and ratings
                                                                                </div>
                                                                                <div class="role-description" id="role-desc-5-@user.Id">
                                                                                    <strong>Level 5: Viewer</strong> - Read-only access to most parts of the admin panel
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="modal-footer">
                                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                                            <button type="submit" class="btn btn-success">Make Admin</button>
                                                                        </div>
                                                                    </form>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <!-- For non-SuperAdmin users, show informational badge instead -->
                                                    @if (user.Administrator != null)
                                                    {
                                                        <!-- Nothing extra needed as the admin badge is already shown in the Role column -->
                                                    }
                                                }

                                                <!-- Ban/Unban User -->
                                                @if (user.Administrator == null) // Only allow ban/unban for non-admin users
                                                {
                                                    @if (user.IsBanned)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-success" data-bs-toggle="modal" data-bs-target="#unbanUserModal-@user.Id">
                                                            <i class="bi bi-unlock"></i> Unban
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#banUserModal-@user.Id">
                                                            <i class="bi bi-ban"></i> Ban
                                                        </button>
                                                    }
                                                }
                                            </div>
                                        </td>
                                    </tr>

                                    <!-- Ban User Modal -->
                                    @if (user.Administrator == null && !user.IsBanned)
                                    {
                                        <div class="modal fade" id="banUserModal-@user.Id" tabindex="-1" aria-labelledby="banUserModalLabel-@user.Id" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="banUserModalLabel-@user.Id">Ban User: @user.Username</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <form asp-action="BanUser" method="post">
                                                        @Html.AntiForgeryToken()
                                                        <div class="modal-body">
                                                            <input type="hidden" name="id" value="@user.Id" />

                                                            <p>Are you sure you want to ban the user <strong>@user.Username</strong>?</p>
                                                            <p class="text-danger">This will prevent the user from logging in and accessing the site.</p>

                                                            <div class="mb-3">
                                                                <label for="banReason-@user.Id" class="form-label">Ban Reason (optional)</label>
                                                                <textarea id="banReason-@user.Id" name="banReason" class="form-control" rows="3" placeholder="Enter a reason for banning this user..."></textarea>
                                                                <div class="form-text">This reason will be visible to administrators only.</div>
                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                            <button type="submit" class="btn btn-danger">Ban User</button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    <!-- Unban User Modal -->
                                    @if (user.Administrator == null && user.IsBanned)
                                    {
                                        <div class="modal fade" id="unbanUserModal-@user.Id" tabindex="-1" aria-labelledby="unbanUserModalLabel-@user.Id" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="unbanUserModalLabel-@user.Id">Unban User: @user.Username</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <p>Are you sure you want to unban the user <strong>@user.Username</strong>?</p>
                                                        <p>This will allow the user to log in and access the site again.</p>

                                                        @if (!string.IsNullOrEmpty(user.BanReason))
                                                        {
                                                            <div class="alert alert-info">
                                                                <strong>Ban Reason:</strong> @user.BanReason
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                        <form asp-action="UnbanUser" method="post">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="id" value="@user.Id" />
                                                            <button type="submit" class="btn btn-success">Unban User</button>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Add client-side filtering functionality
            const searchBox = document.createElement('input');
            searchBox.type = 'text';
            searchBox.className = 'form-control form-control-sm mt-3 mx-3';
            searchBox.style.width = '300px';
            searchBox.placeholder = 'Search users...';

            const cardHeader = document.querySelector('.card-header');
            cardHeader.appendChild(searchBox);

            const tableRows = document.querySelectorAll('tbody tr');

            searchBox.addEventListener('keyup', function () {
                const searchTerm = this.value.toLowerCase();

                tableRows.forEach(row => {
                    const userName = row.querySelector('h6').textContent.toLowerCase();
                    const userEmail = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const userRole = row.querySelector('td:nth-child(4)').textContent.toLowerCase();

                    if (userName.includes(searchTerm) || userEmail.includes(searchTerm) || userRole.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });

            // Role selection description highlighter
            const roleSelects = document.querySelectorAll('select[name="roleLevel"]');

            roleSelects.forEach(select => {
                const userId = select.id.split('-')[1];

                // Initial highlighting
                highlightDescription(select.value, userId);

                // Change highlighting when selection changes
                select.addEventListener('change', function () {
                    highlightDescription(this.value, userId);
                });
            });

            function highlightDescription(roleLevel, userId) {
                // Reset all descriptions
                const descriptions = document.querySelectorAll(`[id^="role-desc-"][id$="-${userId}"]`);
                descriptions.forEach(desc => {
                    desc.classList.remove('bg-light', 'p-2', 'rounded', 'fw-bold');
                });

                // Highlight selected description
                const selectedDesc = document.getElementById(`role-desc-${roleLevel}-${userId}`);
                if (selectedDesc) {
                    selectedDesc.classList.add('bg-light', 'p-2', 'rounded', 'fw-bold');
                }
            }
        });
    </script>
}