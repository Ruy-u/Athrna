@model Athrna.Models.City

@{
    ViewData["Title"] = "Create City";
    Layout = "_AdminLayout";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <div class="d-flex align-items-center">
                        <h6 class="mb-0">Create New City</h6>
                        <a asp-action="Cities" class="btn btn-outline-secondary btn-sm ms-auto">
                            <i class="bi bi-arrow-left"></i> Back to List
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <form asp-action="CreateCity" method="post">
                        <div asp-validation-summary="All" class="text-danger"></div>

                        <div class="form-group mb-3">
                            <label for="Name" class="form-label">City Name</label>
                            <input type="text" class="form-control" id="Name" name="Name" required
                                   value="@(Model != null ? Model.Name : "")" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group mt-4 text-end">
                            <a asp-action="Cities" class="btn btn-outline-secondary me-2">Cancel</a>
                            <button type="submit" class="btn btn-primary">Create City</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Form validation
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');

            form.addEventListener('submit', function(e) {
                const nameField = document.getElementById('Name');
                if (!nameField.value.trim()) {
                    e.preventDefault();
                    nameField.classList.add('is-invalid');
                    alert('City name is required');
                } else {
                    nameField.classList.remove('is-invalid');
                }
            });
        });
    </script>
}