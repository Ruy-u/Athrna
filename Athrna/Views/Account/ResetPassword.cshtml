@model Athrna.Models.PasswordResetViewModel
@{
    ViewData["Title"] = "Reset Password";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Reset Your Password</h4>
                </div>
                <div class="card-body">
                    <p>Enter your new password below.</p>

                    <form asp-action="ResetPassword" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <input type="hidden" asp-for="Email" />
                        <input type="hidden" asp-for="Token" />

                        <div class="form-group mb-3">
                            <label asp-for="NewPassword" class="form-label"></label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control" id="newPassword" />
                                <button type="button" class="btn btn-outline-secondary password-toggle" tabindex="-1">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                            <div class="password-strength-meter mt-2" style="display: none;">
                                <div class="progress" style="height: 5px;">
                                    <div class="progress-bar" role="progressbar" style="width: 0%;"
                                         aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <small class="form-text mt-1">Password strength: <span class="strength-text">Weak</span></small>
                            </div>
                        </div>

                        <div class="form-group mb-4">
                            <label asp-for="ConfirmPassword" class="form-label"></label>
                            <div class="input-group">
                                <input asp-for="ConfirmPassword" class="form-control" id="confirmPassword" />
                                <button type="button" class="btn btn-outline-secondary password-toggle" tabindex="-1">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Reset Password</button>
                        </div>
                    </form>

                    <div class="mt-4 text-center">
                        <a asp-action="Login">Return to login</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Password visibility toggle
            document.querySelectorAll('.password-toggle').forEach(button => {
                button.addEventListener('click', function () {
                    const input = this.previousElementSibling;
                    const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                    input.setAttribute('type', type);

                    const icon = this.querySelector('i');
                    if (type === 'text') {
                        icon.classList.remove('bi-eye');
                        icon.classList.add('bi-eye-slash');
                    } else {
                        icon.classList.remove('bi-eye-slash');
                        icon.classList.add('bi-eye');
                    }
                });
            });

            // Password strength meter
            const passwordField = document.getElementById('newPassword');
            const strengthMeter = document.querySelector('.password-strength-meter');
            const progressBar = document.querySelector('.progress-bar');
            const strengthText = document.querySelector('.strength-text');

            if (passwordField && strengthMeter && progressBar && strengthText) {
                // Show strength meter when password field is focused
                passwordField.addEventListener('focus', function () {
                    strengthMeter.style.display = 'block';
                });

                // Update strength meter on input
                passwordField.addEventListener('input', function () {
                    const password = this.value;
                    let strength = 0;

                    if (password.length >= 8) strength += 20;
                    if (password.length >= 12) strength += 10;
                    if (/[a-z]/.test(password)) strength += 10;
                    if (/[A-Z]/.test(password)) strength += 20;
                    if (/\d/.test(password)) strength += 20;
                    if (/[^a-zA-Z0-9]/.test(password)) strength += 20;

                    // Update progress bar
                    progressBar.style.width = `${strength}%`;
                    progressBar.setAttribute('aria-valuenow', strength);

                    // Update text and color
                    if (strength < 40) {
                        progressBar.className = 'progress-bar bg-danger';
                        strengthText.textContent = 'Weak';
                        strengthText.className = 'strength-text text-danger';
                    } else if (strength < 70) {
                        progressBar.className = 'progress-bar bg-warning';
                        strengthText.textContent = 'Moderate';
                        strengthText.className = 'strength-text text-warning';
                    } else {
                        progressBar.className = 'progress-bar bg-success';
                        strengthText.textContent = 'Strong';
                        strengthText.className = 'strength-text text-success';
                    }
                });
            }
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}