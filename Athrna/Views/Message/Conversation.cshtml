@model Athrna.Models.ConversationDetailViewModel

@{
    ViewData["Title"] = "Conversation with " + Model.GuideName;
}

<div class="container mt-5">
    <div class="chat-container">
        <div class="chat-header">
            <div class="guide-info">
                <div class="guide-avatar">
                    <div class="avatar-circle">
                        @(Model.GuideName.Substring(0, 1).ToUpper())
                    </div>
                </div>
                <div>
                    <h1 class="guide-name">@Model.GuideName</h1>
                    <p class="guide-title">Tour Guide - @ViewBag.Guide.City.Name</p>
                </div>
            </div>
            <a href="javascript:history.back()" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back
            </a>
        </div>

        <div class="chat-messages" id="messageList">
            @if (!Model.Messages.Any())
            {
                <div class="empty-chat">
                    <p>No messages yet. Start a conversation with @Model.GuideName!</p>
                </div>
            }
            else
            {
                foreach (var message in Model.Messages)
                {
                    bool isFromClient = message.SenderType == "Client" && message.SenderId == Model.ClientId;

                    <div class="message-item @(isFromClient ? "message-sent" : "message-received")">
                        <div class="message-bubble">
                            <div class="message-text">@message.Content</div>
                            <div class="message-time">
                                @message.SentAt.ToString("MMM dd, h:mm tt")
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="chat-input">
            <form id="messageForm">
                @Html.AntiForgeryToken()
                <input type="hidden" id="guideId" value="@Model.GuideId" />

                <div class="input-group">
                    <input type="text" id="messageContent" class="form-control" placeholder="Type your message..." required />
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-send"></i> Send
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .chat-container {
            display: flex;
            flex-direction: column;
            height: 70vh;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .chat-header {
            padding: 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .guide-info {
            display: flex;
            align-items: center;
        }

        .guide-avatar {
            margin-right: 15px;
        }

        .avatar-circle {
            width: 50px;
            height: 50px;
            background-color: #1a3b29;
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .guide-name {
            font-size: 1.5rem;
            margin: 0;
        }

        .guide-title {
            color: #6c757d;
            margin: 0;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            background-color: #f8f9fa;
        }

        .empty-chat {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            color: #6c757d;
            text-align: center;
        }

        .message-item {
            margin-bottom: 15px;
            display: flex;
        }

        .message-sent {
            justify-content: flex-end;
        }

        .message-received {
            justify-content: flex-start;
        }

        .message-bubble {
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 10px;
        }

        .message-sent .message-bubble {
            background-color: #1a3b29;
            color: white;
        }

        .message-received .message-bubble {
            background-color: white;
            color: #333;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .message-text {
            white-space: pre-wrap;
            word-break: break-word;
        }

        .message-time {
            font-size: 0.75rem;
            opacity: 0.7;
            margin-top: 5px;
            text-align: right;
        }

        .chat-input {
            padding: 15px;
            border-top: 1px solid #eee;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Scroll to bottom of message list
            const messageList = document.getElementById('messageList');
            if (messageList) {
                messageList.scrollTop = messageList.scrollHeight;
            }

            // Handle message form submission
            const messageForm = document.getElementById('messageForm');
            const messageContent = document.getElementById('messageContent');
            const guideId = document.getElementById('guideId').value;

            messageForm.addEventListener('submit', function (e) {
                e.preventDefault();

                if (!messageContent.value.trim()) {
                    return;
                }

                // Get the anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                // Send message via AJAX
                fetch('/Message/SendToGuide', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': token
                    },
                    body: new URLSearchParams({
                        guideId: guideId,
                        content: messageContent.value
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Add message to the chat
                            const messageItem = document.createElement('div');
                            messageItem.className = 'message-item message-sent';

                            const now = new Date();
                            const timeString = now.toLocaleString('en-US', {
                                month: 'short',
                                day: '2-digit',
                                hour: 'numeric',
                                minute: '2-digit',
                                hour12: true
                            });

                            messageItem.innerHTML = `
                                    <div class="message-bubble">
                                        <div class="message-text">${messageContent.value}</div>
                                        <div class="message-time">${timeString}</div>
                                    </div>
                                `;

                            messageList.appendChild(messageItem);
                            messageList.scrollTop = messageList.scrollHeight;
                            messageContent.value = '';
                        } else {
                            alert('Failed to send message: ' + (data.message || 'Unknown error'));
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while sending your message.');
                    });
            });
        });
    </script>
}