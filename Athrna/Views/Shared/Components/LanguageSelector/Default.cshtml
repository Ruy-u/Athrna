@model Athrna.ViewComponents.LanguageSelectorViewModel

<div class="language-selector">
    <div class="dropdown">
        <button class="language-select-btn dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            @foreach (var language in Model.Languages)
            {
                if (language.Code == Model.CurrentLanguage)
                {
                    <span class="language-flag @language.Code">@language.Name</span>
                }
            }
        </button>
        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="languageDropdown">
            @foreach (var language in Model.Languages)
            {
                <li>
                    <a class="dropdown-item @(language.Code == Model.CurrentLanguage ? "active" : "")"
                       href="#"
                       data-language-code="@language.Code">
                        <span class="language-flag @language.Code">@language.Name</span>
                    </a>
                </li>
            }
        </ul>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get the current language from cookie or URL parameter
        let currentLanguage = getCurrentLanguage();

        // Update the dropdown button and menu items to show the current language
        updateLanguageSelection(currentLanguage);

        // Set up event listeners for language selection
        const languageItems = document.querySelectorAll('[data-language-code]');
        if (languageItems) {
            languageItems.forEach(item => {
                item.addEventListener('click', function (e) {
                    e.preventDefault();

                    // Get the selected language
                    const selectedLanguage = this.getAttribute('data-language-code');

                    // Update the dropdown button and menu items immediately
                    updateLanguageSelection(selectedLanguage);

                    // Construct the new URL with the language parameter
                    const url = new URL(window.location.href);
                    url.searchParams.set('lang', selectedLanguage);

                    // Reload the page
                    window.location.href = url.toString();
                });
            });
        }

        // Function to get current language
        function getCurrentLanguage() {
            // First check URL parameter
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('lang')) {
                return urlParams.get('lang');
            }

            // Then check cookie
            const cookies = document.cookie.split(';');
            for (let cookie of cookies) {
                const [name, value] = cookie.trim().split('=');
                if (name === 'Athrna_Language') {
                    return value;
                }
            }

            // Default to English
            return 'en';
        }

        // Function to update the dropdown button and menu items
        function updateLanguageSelection(language) {
            // Update dropdown button
            const languageButton = document.querySelector('.language-select-btn');
            if (!languageButton) return;

            // Find language info
            let languageText = '';
            let languageCode = '';

            // Update dropdown menu items (add 'active' class to selected item)
            document.querySelectorAll('[data-language-code]').forEach(item => {
                const itemLanguage = item.getAttribute('data-language-code');

                // Remove 'active' class from all items
                item.classList.remove('active');

                // Add 'active' class to the selected language
                if (itemLanguage === language) {
                    item.classList.add('active');
                    languageText = item.querySelector('.language-flag').textContent;
                    languageCode = itemLanguage;
                }
            });

            // Update button content
            if (languageText && languageCode) {
                languageButton.innerHTML = '';
                const span = document.createElement('span');
                span.className = `language-flag ${languageCode}`;
                span.textContent = languageText;
                languageButton.appendChild(span);
            }
        }
    });
</script>